@using ResourceManagementSystem2.Models
@using Kendo.Mvc.UI
@model Programmer[]

@{
    ViewBag.Title = "Resource Management System";
}


@using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
{
    @Html.AntiForgeryToken()
}

@{
    var str = @"
        <div class='task-template' style='background-color:#=Color#; '>
            <p>
                #:title#
            </p>
        </div>";
}

@(Html.Kendo().Scheduler<TaskViewModel>()
            .Name("scheduler")
            .Editable(e => e.TemplateId("editor"))
            .EventTemplate(str)
            .Date(DateTime.Now)
            .StartTime(DateTime.MinValue)
            .Views(views =>
            {
                views.TimelineMonthView(timeline =>
                {
                    timeline.StartTime(DateTime.MinValue);
                    timeline.EndTime(DateTime.MaxValue);
                    timeline.EventHeight(50);
                });
            })
            .Group(group => group.Resources("ProgrammerID").Orientation(SchedulerGroupOrientation.Vertical))
    .Resources(resource =>
    {
        resource.Add(m => m.ProgrammerID)
        .Title("ProgrammerID")
        .Name("ProgrammerID")
        .DataTextField("Name")
        .DataValueField("ProgrammerViewModelID")
        .DataSource(ds => ds.Read("ReadForScheduler", "Programmers")
          .Events(e =>
          {
              e.Push("onSync");

          })
        );

        resource.Add(m => m.ProjectID)
                .Title("ProjectID")
                .Name("ProjectID")
                .DataTextField("Title")
                .DataValueField("ProjectViewModelID")
                .DataColorField("Color")
                //.Multiple(true)
                .DataSource(ds => ds.Read("GetProjectColors", "Scheduler"));



    })

    .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.TaskViewModelID);
                m.Field(f => f.Title).DefaultValue("No title");
            })
    .Read("Read", "Tasks")
    .Create("Create", "Tasks")
    .Destroy("Destroy", "Tasks")
    .Update("Update", "Tasks")
    )

)

@{
    Html.RenderAction("Index", "Projects");
    Html.RenderAction("Index", "Programmers");
    Html.RenderAction("Index", "Specializations");
        }



<script>
    $(function () {
            renderButtons();
        });
</script>


<script id="editor" type="text/x-kendo-template">
    <h4>SetUp Your Task</h4>

        <div class="k-edit-label">
            <label for="title">Title</label>
        </div>

        <div data-container-for="title" class="k-edit-field">
            <label>Start: <input data-role="datepicker" name="start" /></label>
        </div>
        <div data-container-for="title" class="k-edit-field">
            <label> End:&nbsp;&nbsp;<input data-role="datepicker" name="end" /></label>
        </div>

        <select data-role="dropdownlist" data-bind="value:ProjectID"
                data-value-field="ProjectViewModelID" data-source="{transport: {read: {url : '/Scheduler/GetProjectColors'}}}" data-text-field="Title"></select>
        @*<br />*@

        <select data-bind="value:ProgrammerID" name="programmers" data-text-field="Name" data-role="dropdownlist" style="display: none;"
                data-value-field="ProgrammerViewModelID" data-source="{transport: {read: {url : '/Programmers/ReadForScheduler'}}}"></select>

        @*<input  data-source="{transport: {read: {url : '/Programmers/ReadForScheduler'}}}"/>*@

        @*<br /> <br />*@


</script>


<style>

</style>